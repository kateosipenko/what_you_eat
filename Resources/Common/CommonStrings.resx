<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppName" xml:space="preserve">
    <value>What you eat?</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>date of birthday</value>
  </data>
  <data name="Eaten" xml:space="preserve">
    <value>eaten</value>
  </data>
  <data name="EatenForToday" xml:space="preserve">
    <value>eanten for today</value>
  </data>
  <data name="EatFood" xml:space="preserve">
    <value>eat food</value>
  </data>
  <data name="Height" xml:space="preserve">
    <value>height (cm)</value>
  </data>
  <data name="InputYourData" xml:space="preserve">
    <value>Please, input your data.</value>
  </data>
  <data name="Kilo" xml:space="preserve">
    <value>kg</value>
  </data>
  <data name="MyGoal" xml:space="preserve">
    <value>my goal</value>
  </data>
  <data name="Plan" xml:space="preserve">
    <value>plan</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>settings</value>
  </data>
  <data name="Spent" xml:space="preserve">
    <value>spent</value>
  </data>
  <data name="Today" xml:space="preserve">
    <value>today</value>
  </data>
  <data name="WantTo" xml:space="preserve">
    <value>I want to</value>
  </data>
  <data name="Water" xml:space="preserve">
    <value>water</value>
  </data>
  <data name="Weeks" xml:space="preserve">
    <value>weeks</value>
  </data>
  <data name="Weight" xml:space="preserve">
    <value>weight(kg)</value>
  </data>
  <data name="HowMuchEaten" xml:space="preserve">
    <value>how much were eaten</value>
  </data>
  <data name="TotalEaten" xml:space="preserve">
    <value>total eaten</value>
  </data>
  <data name="SpentToday" xml:space="preserve">
    <value>spent today</value>
  </data>
  <data name="TotalSpent" xml:space="preserve">
    <value>total spent</value>
  </data>
  <data name="AddActivity" xml:space="preserve">
    <value>add activity</value>
  </data>
  <data name="SpentTime" xml:space="preserve">
    <value>spent time</value>
  </data>
  <data name="Sex" xml:space="preserve">
    <value>sex</value>
  </data>
  <data name="ActivityType" xml:space="preserve">
    <value>activity type</value>
  </data>
  <data name="MyPlan" xml:space="preserve">
    <value>my plan</value>
  </data>
  <data name="PutOn" xml:space="preserve">
    <value>to put on {0} gramm per week</value>
  </data>
  <data name="RedOf" xml:space="preserve">
    <value>to read of {0} gramm per week</value>
  </data>
  <data name="KeepWeight" xml:space="preserve">
    <value>to keep weight</value>
  </data>
  <data name="ExtraEat" xml:space="preserve">
    <value>extra eat</value>
  </data>
  <data name="NotEat" xml:space="preserve">
    <value>not eat</value>
  </data>
  <data name="Exersizes" xml:space="preserve">
    <value>exersizes</value>
  </data>
  <data name="ExersizesPerDay" xml:space="preserve">
    <value>have to train per day</value>
  </data>
  <data name="FoodPerDay" xml:space="preserve">
    <value>have to eat per day</value>
  </data>
  <data name="CurrentLanguage" xml:space="preserve">
    <value>current language</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>profile</value>
  </data>
  <data name="AmountOfWater" xml:space="preserve">
    <value>Please, input amount of water that you had drunk (milliliters)</value>
  </data>
  <data name="DrunkToday" xml:space="preserve">
    <value>drunk today</value>
  </data>
  <data name="SetupPlanNow" xml:space="preserve">
    <value>Do you want to set up your diet plan now or later?</value>
  </data>
  <data name="WantToWeight" xml:space="preserve">
    <value>I want to weight</value>
  </data>
  <data name="Kg" xml:space="preserve">
    <value>kg</value>
  </data>
  <data name="DuringSpecifiedPeriod" xml:space="preserve">
    <value>during specified period</value>
  </data>
  <data name="InOptimalTime" xml:space="preserve">
    <value>in optimal time</value>
  </data>
  <data name="ToSpecifyiedDate" xml:space="preserve">
    <value>to specifyied date</value>
  </data>
  <data name="DistributeWeight" xml:space="preserve">
    <value>distribute useless weight</value>
  </data>
</root>